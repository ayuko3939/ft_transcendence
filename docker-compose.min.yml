services:
  database-init:
    image: ft_transcendence_databaseinit:${COMMIT_HASH}
    build:
      context: ./
      dockerfile: ./database/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
    entrypoint: ["/app/init.sh"]
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db

  frontend:
    image: ft_transcendence_frontend:${COMMIT_HASH}
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - BACKEND_WS_URL=ws://backend:3001/game
    ports:
      - "3000:3000"
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db
    depends_on:
      database-init:
        condition: service_completed_successfully
    networks:
      - app-network

  backend:
    image: ft_transcendence_backend:${COMMIT_HASH}
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
      - FRONTEND_URL=http://frontend:3000
    command: ["/app/dist/index.js"]
    ports:
      - "3001:3001"
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db
    depends_on:
      database-init:
        condition: service_completed_successfully
    networks:
      - app-network

  nginx:
    image: ft_transcendence_nginx:${COMMIT_HASH}
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  logdir:
  dbdir:
  nginx_ssl:

networks:
  app-network:
    driver: bridge
