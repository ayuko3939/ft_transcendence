services:
  database-init:
    image: ft_transcendence_databaseinit:${COMMIT_HASH:-latest}
    build:
      context: ./
      dockerfile: ./database/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
    entrypoint: ["/app/init.sh"]
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db

  frontend:
    image: ft_transcendence_frontend:${COMMIT_HASH:-latest}
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - BACKEND_WS_URL=ws://backend:3001/game
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ENDPOINT=${AWS_ENDPOINT}
      - AWS_REGION=ap-northeast-1
      - UPLOAD_BUCKET_NAME=${UPLOAD_BUCKET_NAME}
    ports:
      - "3000:3000"
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db
    depends_on:
      database-init:
        condition: service_completed_successfully
    networks:
      - app-network

  backend:
    image: ft_transcendence_backend:${COMMIT_HASH:-latest}
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    environment:
      - DB_FILE_DIR=/var/lib/db
      - DB_FILE_NAME=${DB_FILE_NAME}
      - FRONTEND_URL=http://frontend:3000
    command: ["/app/dist/index.js"]
    ports:
      - "3001:3001"
    volumes:
      - logdir:/app/logs
      - dbdir:/var/lib/db
    depends_on:
      database-init:
        condition: service_completed_successfully
    networks:
      - app-network

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - miniodir:/data
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID:-rootuser}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY:-changeme123}
    networks:
      - app-network
    command: ["server", "/data", "--console-address", ":9001"]

  minio-init:
    image: minio/mc:RELEASE.2025-04-16T18-13-26Z
    depends_on:
      - minio
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID:-rootuser}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY:-changeme123}
      - UPLOAD_BUCKET_NAME=${UPLOAD_BUCKET_NAME:-default-bucket}
    volumes:
      - ./internal/settings/minio_entrypoint.sh:/minio_entrypoint.sh
    entrypoint: ["/bin/sh", "/minio_entrypoint.sh"]
    networks:
      - app-network

volumes:
  logdir:
  dbdir:
  miniodir:

networks:
  app-network:
    driver: bridge
